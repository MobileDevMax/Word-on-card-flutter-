import 'package:flutter/material.dart';
import 'dart:math';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Word on card',
      home: RandomWordScreen(),
      theme: ThemeData(  
        primarySwatch: Colors.lightGreen,
        scaffoldBackgroundColor: Colors.white, 
      ),
    );
  }
}

class RandomWordScreen extends StatefulWidget {
  @override
  _RandomWordScreenState createState() => _RandomWordScreenState();
}

class _RandomWordScreenState extends State<RandomWordScreen> with SingleTickerProviderStateMixin {
  final List<String> words = ['car', 'table', 'computer', 'book', 'mango'];
  String randomWord = '';
  late AnimationController _controller;
  late Animation<double> _animation;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      duration: const Duration(milliseconds: 500),
      vsync: this,
    );

    _animation = Tween<double>(begin: 300, end: 0).animate(
      CurvedAnimation(
        parent: _controller,
        curve: Curves.easeOut,
      ),
    );
  }

  void generateRandomWord() {
    final random = Random();
    setState(() {
      randomWord = words[random.nextInt(words.length)];
      _controller.forward(from: 0);
    });
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Word on card'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            if (randomWord.isNotEmpty)
              AnimatedBuilder(
                animation: _animation,
                builder: (context, child) {
                  return Transform.translate(
                    offset: Offset(_animation.value, 0),
                    child: Card(
                      color: Colors.lightGreen, 
                      child: Padding(
                        padding: const EdgeInsets.all(40.0),
                        child: Text(
                          randomWord,
                          style: TextStyle(fontSize: 32, color: Colors.white),
                        ),
                      ),
                    ),
                  );
                },
              ),
            SizedBox(height: 40),
            ElevatedButton(
              onPressed: generateRandomWord,
              child: Text('New Word'),
            ),
          ],
        ),
      ),
    );
  }
}
